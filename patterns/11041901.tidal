xfadeIn 2 8 $
    -- loopAt 12 $
      whenmod 4 3 (0.25 <~) $
      every 4 (spin 4) $
      stack [
      whenmod 16 15 (# s "~") $
      whenmod 15 5 (every 2 (stut' "<3 4>" "<-0.0625/2 0.0625 0.125? -0.1 0>" (*| speed (every 2 (fast 2) $ "<0.85 0.95 1.05 1.1 1.05>")))).(spread ($)[(# triode (range 0.2 0.7 cosine)),(# waveloss "<4 8 32>"),(# fshift (range 0.1 2 tri)).(# fshiftnote (range 0.6 2 tri)),(# squiz "<2 4 8 24>")]) $
      whenmod 5 2 (|+ up (irand (-12))).(every 2 (fast 2)).(every 4 (chunk 4 (hurry 2))) $
        every 5 (|+ up "-5 -7").(every 2 (hurry 2)) $
        every 2 (slow 2) $ s "tv*4" # cut "-1 2 3 1 4"
        # unit "c r"
        # note (every 2 (fast 2) $ "ef5 bf4 fs4 ef4 gs4 fs4 ef4 ds4")
        # n (every 1 (slow 1.5) $ every 3 (0.25 ~>) $ every 2 (0.25 <~) $ "0 3"),
      every 6 (((# delay "0.1 0.1 0.5") . (# delaytime "0.1 0.001 0.001 0.2") . (# delayfeedback "0.95"))) $
        slow 2 $ s "[rave2*2 odx*1] "
        # cut "2 4 1 4 4 3"
        # n (every 1 (slow 1.5) $ every 3 (0.25 ~>) $ every 2 (0.25 <~) $ "0 3") ,
        slow 2 $ note (every 2 (fast 2) $ "~ [fs3 b4] ef3 ef4 [bf3 ef4] ~ ef5 ef5") # s "bass4:3" # cut 1
        ]

hush

xfadeIn 2 4 $

d2 $
    loopAt 8 $
      whenmod 6 4 (palindrome) $
      every 6 (# speed "-1") $
      every 4 (0.25 ~>) $
      whenmod 5 2 (density 2) $
      every 2 (slow 2) $ s "[ugslam*1, layer*8, moto*2 bs*4 ]"
      |> note (every 3 (slow 1.5) $ "12 0 11 7 1 7 11 12 2 2 9 5 9 7")
      # cut "- 1"


xfadeIn 2 8 $
      whenmod 6 3 (# ring (slow 2 $ range 0.05 0.2 cosine)).(slowspread ($)[(# ringf (slow 3 $ range 300 20 saw)),(# octer (range 0 1.2 tri)).(# octersub (range 0 0.9 sine)),(# ringf (fast 2 $ range 400 100 saw))]).(spread ($)[(# octer (range 0.2 0.9 tri)).(# octersub (range 0.9 1.3 tri)), (# krush (range 0 1 sine)).(# kcutoff (fast 2 $ range 3000 200 isaw))]) $
      every 6 (((# delay "0.1 0.1 0.5") . (# delaytime "0.1 0.001 0.001 0.2") . (# delayfeedback "0.95"))) $
      stack [
      every 5 (# up "0 10") $
      every 4 (0.25 ~>) $
      slow 2 $ s "hold*2 layer*8 tp*2 jpnperc*4 "
      # n (every 4 (slow 1.5) $ every 3 (0.25 ~>) $ every 2 (0.25 <~) $ "0 2 3 4 5 2 1 3")
      # cut "<-1 2 3>" ,
       whenmod 8 6 (0.25 <~) $
       -- every 3 (trunc (3/8)) $
       every 6 (density 2) $
       slow 2 $ s "~ [grsn*2 grcm*4] grprc*2 grcp*4 "
       # n (every 2 (palindrome) $ "0 4 8 9 1 3 11 12")
       # cut "-1"
    ]

hush

xfadeIn 2 8 $
loopAt "8 4" $
whenmod 6 3 (# ring (slow 2 $ range 0.05 0.2 cosine)).(slowspread ($)[(# ringf (slow 3 $ range 300 20 saw)),(# octer (range 0 1.2 tri)).(# octersub (range 0 0.9 sine)),(# ringf (fast 2 $ range 400 100 saw))]).(spread ($)[(# octer (range 0.2 0.9 tri)).(# octersub (range 0.9 1.3 tri)), (# krush (range 0 1 sine)).(# kcutoff (fast 2 $ range 3000 200 isaw))]) $
every 6 (((# delay "0.1 0.1 0.5") . (# delaytime "0.1 0.001 0.001 0.2") . (# delayfeedback "0.95"))) $
every 5 (# up "0 10") $
every 4 (0.25 ~>) $
slow 2 $ s "tv*2 layer*8 tp*2 jpnperc*4 "
# n (every 4 (slow 1.5) $ every 3 (0.25 ~>) $ every 2 (0.25 <~) $ "0 2 3 4 5 2 1 3")
# cut "<-1 2 3>"

    xfadeIn 1 8 $
    whenmod 8 7 (fast 2).(# s "~") $
   seqPLoop [
      (0,3, every 3 (trunc (3/8)) $
        whenmod 5 2 (trunc (3/8)) $
        whenmod 7 4 (0.125 <~) $
        slow 2 $ s "grsn*2 s*1  xh*1 "
        # n (every 4 (density 2) $ run 1)) ,
      (4,7,every 5 (palindrome) $
        every 4 (degrade) $
        every 3 (0.5 ~>) $
        every 2 (0.125 <~) $
        slow 2 $ s "glasstap*2 tc*8 pl*8 ul*8 "
        # n (every 1 (0.25 <~) $ run 2)),
      (8,11,every 5 (palindrome) $
        whenmod 6 4 (# pan "0.25 0.25 1 0.75 0.75 0.75") $
        whenmod 7 5 (# accelerate "1") $
        every 4 (degrade) $
        slow 2 $ s "bin*8 <tc tp hold foleyperc>*8 layer*1 ul*8 "
        # n (every 1 (0.25 <~) $ run 2)),
      (12,15, every 5 (palindrome) $
        whenmod 8 6 (0.125 ~>) $
        whenmod 6 3 (density (8/3)) $
        slow 2 $ s "bin*4 ~ <layer hold foleyperc>*4 ul*8 "
        # n (every 1 (0.25 <~) $ run 2) )
    ]



d1 $ silence

do
xfadeIn 4 1 $ silence
xfadeIn 3 1 $ silence
xfadeIn 2 1 $ silence
xfadeIn 1 1 $ silence

    xfadeIn 2 8 $
    every 16 (superimpose (# s "~").(slow 2)) $
    whenmod 7 2(slowspread ($)[ density 0.5, slow 2, fast 2, chunk 4(hurry 2), ply "<2 3 4>", (+| accelerate "<0.5 1 2 0.3 -0.5 0.3>").(density 2)]) $
    whenmod 16 8 (spread ($)[
    (# squiz "{1 2 4 8}%2"),
    superimpose (# fshift "<200 300 400 800>").(# fshiftnote "<3 1 2>").(every 2 (>| fshiftphase (fast 4 $ range 0.01 0.2 tri))),
    (# krush (run 8)).(# kcutoff "<800 2000 3000 6000>"),
    (superimpose (# distort (fast 4 $ range 0.1 0.9 isaw)).(every 2 (# ring (fast 3 $ range 0.1 0.4 tri)).(# ringf (fast 5 $ range 200 500 cosine)))),
    superimpose (# accelerate "<0.1 -0.2 -0.5 -1 -2>").(# cut "<0 1 -1 2>").(slow 2).(every 4 (# s "~"))
    ]) $
      seqPLoop [
          (0,3, whenmod 6 4 (degrade) $
            whenmod 5 3 (# shape "0.1 0.2 0.3 0.4 0.2 0.1 0.4 0.3") $
            every 6 (# speed "-1") $
            slow 2 $ s "hold*4 pad*1 grcm*2 626*2 "
            # n (every 4 (slow 2) $ every 2 (rev) $ "4 1 1 10 10 5 4")
            # speed "<0.5 0.75 0.95 1.05>") ,
          (4,7,  whenmod 6 4 (# speed "-1") $
            every 6 (density 1.5) $
            whenmod 7 4 (0.5 ~>) $
            slow 2 $ s "tn*8 moto*1 hits*4 snares*2 "
            # n (every 4 (rev) $ "9 11 4 1 11 6 5 0 0 1 12 0 6 2")
            # speed 0.5) ,
          (8,11,
            whenmod 7 4 (slow 1.5) $
            whenmod 6 4 (spread' (striate' 32) ( every 2 (slow 2) $ slow 1.5 sine)) $
            whenmod 6 3 (# pan "0") $
            every 6 (trunc (3/8)) $
            slow 2 $ s "vk*8 v3*8 ~ if*2 "
            # n (every 2 (0.25 <~) $ "9 0 7 4")
            #  cut "-1"
            # speed "<0.5 0.45 0.55 0.6 0.45 0.55>") ,
          (12,15,  whenmod 7 4 (slow 1.5) $
            whenmod 6 3 (# pan "0") $
            every 1 (# up "7") $ stack [
              every 6 (((# delay "0.1 0.5 0.4 0.6") . (# delaytime "0.1") . (# delayfeedback "0.3 0.1 0.1"))) $
              whenmod 5 2 (density 3) $
              slow 2 $ s "<tk tk>*1 glasstap*8 s*1 ts*1 "
              # n (every 2 (0.25 <~) $ run 9),
            slow 2 $ s "vk*8 v3*8 tp*4 snares*8 "
            ]
            # n (every 2 (density 4) $ every 2 (density 1.5) $ every 3 (0.25 <~) $ run 11)
            )]


d1 $ every 2 (density 4) $ note "10 35 30 25" # s "supermandolin"


hush

do
   d1 $
      every 6 (# shape "0.4") $
      whenmod 5 3 (trunc (3/8)) $
      whenmod 6 3 (# shape "0.1 0.5") $
      whenmod 6 3 (striate 64) $
      every 5 (trunc (3/8)) $
      slow 2 $ s "ugcrash*1 grk*1 odx*8 impacts*4 "
      # n (every 2 (palindrome) $ run 1)
      # cut "-1 1 -1 1 1 -1 1 2 4 2 -1"


do
xfadeIn 1 16 $ silence
xfadeIn 2 16 $ silence
xfadeIn 3 4 $ silence

   d1 $
   -- loopAt 2 $
      every 6 (+| shape "0.4") $
      whenmod 5 3 (trunc "<3/8 3/5 3/4>") $
      whenmod 6 3 (>| shape "0.1 0.5") $
      stack [
      every 3(trunc (3/8)).(chunk 4 (hurry 2)) $
        every 2 (slow 2) $ s "[junk*4 tc*<1 2 4 8>, grk(<7 8 4>,16)]"
        # n (every 4 (rev) $ "7 6 7")
        ,
        whenmod 15 2 (slowspread ($)[
        (# squiz "{1 2 4 8}%2"),
        superimpose (# fshift "<200 300 400 800>").(# fshiftnote "<3 1 2>").(every 2 (>| fshiftphase (fast 4 $ range 0.01 0.2 tri))),
        (# krush (run 8)).(# kcutoff "<800 2000 3000 6000>"),
        (superimpose (# distort (fast 4 $ range 0.1 0.9 isaw)).(every 2 (# ring (fast 3 $ range 0.1 0.4 tri)).(# ringf (fast 5 $ range 200 500 cosine)))),
        superimpose (>| accelerate "<0.1 -0.2 -0.5 -1 -2>").(# cut "<0 1 -1 2>").(slow 2).(every 4 (# s "~"))
        ]) $
        every 2 (slow 2) $ s "[bbss(<2.5 5 3>,8,<0 1>) ]"
        +| note (every 2 (fast 2) $ "8 14 6 8 16 9 14 12")
        # n (every 2 (slow 2) $ "8 14 6 8 16 9 14 12")
        # cut 1,
        -- every 6 (# shape "0.4") $
        whenmod 5 3 (trunc (3/8)) $
        whenmod 6 3 (# accelerate "0.1 0.5") $
        whenmod 6 3 (stripe 3) $
        every 5 (iter 4) $
        slow 2 $ s "ugcrash*1 grk*1 ugcrash*8 impacts*4 "
        # n (every 2 (palindrome) $ run 1)
        # cut "-1 1 -1 1 1 -1 1 2 4 2 -1"
      ]
      # cut "1 -1 "
      # speed "<1 0.75 1.25 2 -1>"

hush

do
   d1 $
      whenmod 5 3 (trunc (3/8)) $
      whenmod 5 3 (# accelerate "0.5 -1") $
      whenmod 7 5 (slow 3) $
      slow 2 $ s "[hoover*1 xcy*2, tk*4 ugslam*4] "
      # n (every 3 (rev) $ "10 11 5 12 3")
      # cut "2 3 3 1"


do
   d1 $
      every 3 (0.125 ~>) $
      whenmod 5 3 (0.125 ~>) $
      whenmod 5 3 (# accelerate "0.5 -1") $
      whenmod 7 5 (slow 3) $
      slow 2 $ s "hoover*1 basss*2 tk*4 strings*4 "
      # n (every 2 (rev) $ run 6)
      # cut "3 -1 2 2 2 3 -1 1 -1 2 3 2"



   d1 $
      every 4 (0.25 ~>) $
      whenmod 5 3 (0.125 ~>) $
      every 4 (((# delay "0.1") . (# delaytime "0.001") . (# delayfeedback "0.2 0.8"))) $
      whenmod 7 5 (slow 3) $
      slow 2 $ s "tk*2 basss*2 junk*8 strings*4 "
      # n (every 2 (rev) $ run 6)
      # cut "-1"


   d2 $
      seqPLoop [
      (0,7, whenmod 7 4 (jux (rev)) $
      whenmod 5 3 (0.125 ~>) $
      every 5 (jux (rev)) $
      every 4 (((# delay "0.1") . (# delaytime "0.001") . (# delayfeedback "0.2 0.8"))) $
      every 2 (slow 2) $ s "[prof*2, tp*1 junk*8, ~ impacts*2 ]"
      # n (every 1 (0.25 <~) $ every 3 (0.25 <~) $ every 2 (0.25 ~>) $ every 4 (density 3) $ every 1 (0.25 <~) $ every 3 (0.25 <~) $ "5 4 7 4 4 11 9 9 12 3 7 1 3")
      # cut "3"),
      (7,15, every 4 (0.125 ~>) $
      whenmod 7 4 (density 2) $
      every 2 (slow 2) $ s "[bs*4 bros*2, bottle*4 s*2 ]"
      # n (every 3 (palindrome) $ every 2 (0.25 ~>) $ run 4)
      # cut "1 -1 3")
      ]

hush

   clutchIn 5 8 $
   foldEvery [3,5] (spread ($)[chop "<2 16 32 54>",striate 64,smash 32 [2,3,4],(ply "<2 3 4>")]).(chunk 4 (hurry 0.5)) $
   foldEvery[7,11] (slowspread ($)[
     (spread ($)[(# squiz "1 2 3 32"),(>| squiz "{1 2 4 8}%2").(# cut 1)]),
   --   superimpose (# fshift "<200 300 400 800>").(# fshiftnote "<3 1 2>").(every 2 (>| fshiftphase (fast 4 $ range 0.01 0.2 tri))),
     (# krush (run 8)).(>| kcutoff "<800 2000 3000 6000>").(# cut 1).(stut 4 0.125 0.25),
   --   (superimpose (>| distort (fast 4 $ range 0.1 0.9 isaw)).(every 2 (# ring (fast 3 $ range 0.1 0.4 tri)).(# ringf (fast 5 $ range 200 500 cosine)))),
     superimpose (>| accelerate "<0.1 -0.2 -0.5 -1 -2>").(# cut "<0 1 -1 2>").(slow 2).(every 4 (# s "~"))
     ]) $
    every 4 (0.25 ~>) $
      -- whenmod 4 2 (density 2) $
      every 2 (slow 2).(density 2) $ s "[<vk tk>*4 <bros tc>*2, xcp*4 ts*2 ]"
      # n (every 3 (palindrome) $ every 2 (0.25 ~>) $ run 4)
      # cut "1 -1 3"

d1 $
  every 5 (# up "7") $
  every 6 (# up "-2 -5") $
  every 5 (0.125 <~) $
  every 2 (# speed "-1") $
  slow 2 $ s "hoover*4 v2*8 s*4 glasstap*2 "
  # n (every 4 (0.25 ~>) $ every 3 (palindrome) $ run 5)
         -- (( cut "))cutpat"


   clutchIn 4 16 $
   loopAt 4 $
   whenmod 15 11 (spread ($)[
   (# squiz "{1 2 4 8}%2"),
   superimpose (# fshift "<200 300 400 800>").(# fshiftnote "<3 1 2>").(every 2 (>| fshiftphase (fast 4 $ range 0.01 0.2 tri))),
   (# krush (run 8)).(# kcutoff "<800 2000 3000 6000>"),
   (superimpose (# distort (fast 4 $ range 0.1 0.9 isaw)).(every 2 (# ring (fast 3 $ range 0.1 0.4 tri)).(# ringf (fast 5 $ range 200 500 cosine)))),
   superimpose (>| accelerate "<0.1 -0.2 -0.5 -1 -2>").(# cut "<0 1 -1 2>").(slow 2).(every 4 (# s "~"))
   ]) $
   whenmod 4 2 (superimpose (# fshift "<200 300 400 800>").(# fshiftnote "<3 1 2>").(every 2 (# fshiftphase (fast 4 $ range 0.01 0.2 tri)))) $
      seqPLoop [
      (0,7, whenmod 7 4 (density 2) $
      whenmod 5 3 (# up "10 10 0") $
      every 6 (*| speed 0.75) $
      every 4 (0.25 <~) $
      every 2(slow 2) $ s "[xk(<3 3.5 5>,8), hoover(<2 3.5>,8,<1 3 5>), b(1,4,<0 1 2>), amencutup*<8 16>] "
      # n (every 4 (slow 3) $ every 3 (slow 1.5) $ every 2 (density 1.25) $ run 5)
      # cut "3 -1 -1" ),
      (8,15, whenmod 7 4 (density 2) $
      every 6 (|* speed 1.25) $
      every 4 (0.125 ~>) $
      whenmod 8 4 (density 2) $
      every 2 (fast 2) $ s "[xk(<3 3.5 5>,8), hardcore*4 hoover*2, amencutup*<8 16>, b(1,4,<0 1 2>), bottle*4 s*2]"
      # n (every 3 (palindrome) $ every 2 (0.25 ~>) $ run 4)
      # cut "-1 -1")
      ]
      # gain 0.76

xfadeIn 2 8 $ silence

xfadeIn 3 8 $
whenmod 8 6 (# delay 0.4).(# delaytime "<0.05 0.1 0.2 0.15>").(# delayfeedback (every 2 (fast 2) $ "<0.8 0.6 0.5 0.2>")) $
 whenmod 3 1 (slow 4 )$ note "2 <1 5> <2 5> <1 2>" # s "white"
# attack "0.5 1 2 3 4 5 6 7" # release "<0.2 0.5 0.75 1>"
# fshift (slow 16 $ range 20 3000 saw)
# krush (slow 3 $ range 0 3 saw)
# kcutoff (slow 4 $ range 10000 200 isaw)
# fshiftnote (every 2 (slow 2) $ "0.5 1 1.25 0")
# lpf (slow 2 $ every 2 (slow 2) $ range 30 600 cosine)
# lpq (segment 4 $ slow 6 $ range 0.01 0.15 tri)
# triode (segment 8 $ slow 12 $ range 0.1 0.3 sine)
-- # cut 1
# gain (slow 4 $ range 0.1 0.25 saw)

setcps 0.25

hush
