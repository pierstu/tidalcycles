# n (every 4 (0.25 ~>) $ every 4 (0.25 ~>) $ every 2 (palindrome) $ every 4 (density 1.25) $ run 3)
# n (every 5 (density 1.5) $ every 4 (density 2) $ every 2 (density 4) $ every 3 (rev) $ run 4)
# n (every 3 (density 2) $ "1 9 1 6 11 1 3")


do
   d2  $
    stack [
      seqPLoop [
        (0, 7, whenmod 7 4 (# up "5") $
        every 3 (0.5 ~>) $
        every 5 (jux (rev)) $
        whenmod 7 4 (spin 4) $
        loopAt 2 $ s "tf*2  scapes*8  "
        # cut "-1")
        ,
        (8, 15, whenmod 7 4 (# up "5") $
        every 6 (# speed "0.5") $
        every 1 (spin 3) $
        loopAt 2 $ s "[tf*4 b*4,~ ~ scapes*4 ac*2] "
        # cut "3 3 4 1 3 4")
        ,
        (16, 23, whenmod 8 6 (0.125 <~) $
        every 6 (# speed "0.5") $
        whenmod 8 6 (0.125 ~>) $
        loopAt 2 $ s "[tf*4 b*4,  b*2 ac*1 ~ ~] "
        # cut "3 3 4 1 3 4")
        ,
        (24, 31, whenmod 5 2 (# up "12 10") $
        whenmod 8 6 (0.125 ~>) $
        loopAt 2 $ s "[tf*8 ac*2 , b*8 tn*8] "
        # cut "1 -1")
      ]
      # n (every 2 (0.25 ~>) $ every 4 (0.25 <~) $ "8 3 3 8")
      -- ,
      -- whenmod 7 5 (# s "~") $
      -- s "ak:4({8 4 16 4}%4,16,<0 2>)"
      -- # cut "0 1"
      -- # shape 0.3
    ]
    # gain 0.68

clutchIn 2 16 $ silence

hush

    # n (every 2 (0.25 ~>) $ every 3 (palindrome) $ run 12)

do
   clutchIn 2 8 $
      stack [
        seqPLoop [
          (0,7, every 2 (jux (rev)) $
          whenmod 8 6 (palindrome) $
          every 4 (loopAt 2) $
          slow 2 $ s "tn*4 tf*4 b*2 tn*2 ")
          ,
          (8,15, every 6 (trunc (3/8)) $
          every 3 (# accelerate "-0.5 1") $
          every 2 (# accelerate "-1") $
          whenmod 5 2 (rev) $
          every 4 (loopAt 2) $
          slow 2 $ s "tn*2 tf*2 ap*2 af*2 ")
          ,
          (16,23, every 6 (trunc (3/8)) $
          every 3 (# accelerate "-0.5 1") $
          whenmod 6 3 (0.5 <~) $
          every 5 (density 2) $
          whenmod 5 2 (chop 4) $
          every 4 (loopAt 2) $
          slow 2 $ s "tn*8 k*4 ap*8 tf*2 ")
          ,
          (24,31, every 6 (trunc (3/8)) $
          every 3 (# accelerate "-0.5 1") $
          whenmod 6 3 (0.5 <~) $
          every 5 (density 2) $
          whenmod 5 2 (chop 4) $
          every 4 (loopAt 2) $
          slow 2 $ s "tn*2 af*2 ap*8 tf*2 ")
          ]
          # n (every 2 (slow 3) $ run 9)
          # cut "-1"
      ,
      fix (|+ n (every 3 (density 1.25) $ "7 5 1 2 2 3 7 2 3 1")) (s "el") $
      whenmod 6 3 (0.25 <~) $
      every 3 (spin 4) $
      every 2 (((# delay "0.2") . (# delaytime "0.2") . (# delayfeedback "0.5 0.95 0.1"))) $
      whenmod 6 4 (chop 8) $
      loopAt 2 $ s "tn*2 pm*<4 8> pp*<2 4> el*2 "
      # cut "3 4 2 3 2 -1"
      # n (every 4 (palindrome) $ every 2 (rev) $ "1 5 0 5")
      ,
      s "brok:2({3.5 5.5 7 3}%4,8,<0 2>)"
      # cut "0 1"
      # shape 0.3
      # distort 0.1
      # triode 0.3
      ]






      # cut "-1"
      # cut "4 -1 3 -1 -1 2 4 4"
      # cut "4 2"
