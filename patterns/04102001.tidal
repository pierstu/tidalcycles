-- done
d1 $
  stack [
    listen 1 $
    whenmod 14 6 (soak 4 (spin 2 . iter 4 . every 2 (listen 1 . slow 2))) $
    someCyclesBy (3/18) (slow 2 . listen 0) $
    s "snapkickSusSd(3,9,7)"
    # amp 0.3
    # bdFrqL1 1261.0
    # bdFrqL2 50.0
    # bdFrqL3 151.0
    # bdFrqT1 0.0035
    # bdFrqT2 "0.12 0.09 0.01"
    # bdFrqC "-4.0"
    # bdAmpAtt 0.005
    # bdAmpSus "0.1 0.38 0.28"
    # bdAmpRel "0.3 0.01 0.8 0.1"
    # bdAmpLev 1.0
    # bdAmpCurve 1.0
    # popFrqSt "750.0 2600 10000"
    # popFrqEnd "261.0 8000? 500"
    # popFrqDur "[0.02 0.1] 0.001"
    # popAmpAtt 0.001
    # popAmpSus 0.02
    # popAmpRel "0.001 0.1 0.3"
    # popAmpLev "0.15 0.3 0.6"
    # clkAmpAtt 0.001
    # clkAmpRel "0.01 0.1 0.3"
    # clkAmpLev 0.15
    # clkAmpCurve "-4.0"
    # clkfFundFreq "10.0 20 -2"
    # clkfFormFreq "4760.0 10000"
    # clkfBwFreq "2110.0 800 200"
    # clkLpfFreq "3140.0 50 1000"
    ,
    listen 1 $
    s "cymbal808ryanSd*3 _ <cymbal808ryanSd ~>"
    # amp 0.4
    # sustain 2
    # release 0.6
    # baseFreq 700.0
    # penvL1 0.2
    # penvL2 0.6
    # ptime 0.3
    # pcurve "-4.5"
    # pulsew 302
    # rlpfFrq 5810.0
    # rlpfRq "3.7999"
    # rhpfFrq 400.0
    # rhpfRq 0.02
    # envL1 0.0
    # envL2 1
    # envL3 0.4
    # envL4 0.0
    # envL5 0.0
    # envT1 2.0
    # envT2 250.0
    # envT3 "<50.0 80>"
    # envT4 500.0
    # envC1 0.0
    # envC2 "-5"
    # envC3 0.0
    # envC4 "-50.0"
    # hpf 80
    # lpf 2900
    # gain 0.05
    ,
    listen 1 $
    loopAt "1 2" $
    sometimesBy 0.17
    (within (2/9, 5/9) (gap "2 3")) $
    s "<[{cym1Sd ~ <cym1Sd [~ cym1Sd ~]> _ cym1Sd}%18] [{~ cym1Sd}%9]>"
      # amp 0.2
      # envL1 0.0
      # envL2 1.0
      # envL3 0.3
      # envL4 0.0
      # levScale 1.0
      # envT1 "0.001 0.06 0.02"
      # envT2 0.02
      # envT3 0.01
      # envC1 "-8.0"
      # envC2 "<-200 -21> 4.0"
      # envC3 "-4"
      # tu "2400 5400 <430 1239>"
      # gain 0.8
      ,
      listen 1 $
      someCyclesBy (2/9) (spin 2) $
      someCyclesBy (5/9) (slow 2 . listen 0) $
      (loopAt "1 2") $
      s "rimnewSd(<3 9 27?>,9)"
      # amp 0.061
      # sustain 1
      # release 0.2
      # tu (("<0.25 0.3> 0.2") * (segment 4 $ range 0.8 1.5 tri))
      # atk 0.0001
      # rls "[0.6 0.3] 0.1"
      # freqTime1 "0.0022 0.001"
      # freqTime2 0.002 -- ("0.5 0.02" * (segment 6 $ slow 2 $ range 0.5 1 isaw))
      # hpf 120
      # hpq 0.1
      # bpf "1200 800 60"
      # bpq 0.01
    ,
    listen 1 $
    someCyclesBy (1/9) (listen 0) $
    whenmod 10 8
    (scramble "5 <4 3>" . bite 5 ("2 4 3 0 1" * "<0.5 2>")) $
    every 3
    (within (0, 2/9) (wchoose [((2/9), 0.3), ((5/9), 0.7)] ~>)) $
    s "kick808newSd [~ kick808newSd ~] <~ [~@2 kick808newSd]>"
      # amp 0.8
      # envL1 1.0
      # envL2 1.0
      # envL3 0.0
      # envT1 0.0
      # envT2 1.0
      # envCurve "-8.0"
      # enfL1 7000.0
      # enfL2 30.0
      # enfL3 "32 50.0 32"
      # enfT1 (0.005 * "<1 0.9 1.2>")
      # enfT2 0.001
      # enfCurve "-4.0 20"
      # tu "2.0 <1 2> 5?0.12"
      # sin2Frq "10.0 230?0.12"
      # sin2Amp 50.0
      # gain 0.92
      ,
      listen 1 $
      someCyclesBy (1/9) (spreadChoose ($) [slow 2, listen 1]) $
      s "IkedaClickSd(7 4 6,9,3)"
      # gain 0.75
      # amp 0.3
      # centerFreq "{15000.0 [8500 12000] 20000}%5"
      # rq (slow 9 $ segment 27 $  range 0.02 0.05 isaw)
      # modamp "25.0 30"
  ] #  cps 0.87
  |* gain 1.035

-- done
d1 $
   stack [
   listen 1 $
   whenmod 18 16 (listen 0) $
   ((1/5) <~) $
    s "kicklaserbeamSusSd(<4 1.5>,5,1)"
    # gain 0.69
    # amp 0.3
    # sustain "0.1 0.09 0.8"
    # freqenvL1 3.97
    # freqenvL2 5.0
    # freqenvL3 1.0
    # freqenvL4 2.97
    # freqenvT1 0.006
    # freqenvT2 0.007
    # freqenvT3 0.0026
    # ampenvL1 1.0
    # ampenvL2 0.006
    # ampenvL3 0.9
    -- # ampenvL4 0.3
    # ampenvT1 "0.02 0.0002"
    # ampenvT2 "0.1 0.5 0.36"
    # ampenvT3 "0.1 0.001*2"
    # hpfFreq "{80.0 100 60}%5.5"
    # hpfRq 1.0
    ,
    listen 1 $
    whenmod 18 14 (listen 0) $
    foldEvery [2, 6]
    (swingBy (1/5) (3/5)) $
    s "<kickParallaxSusSd(3, 2.5, 1) kickParallaxSusSd(3, 2.5, <2 3>)>"
      # sustain 1
      # release "<0.3 0.8 0.4>"
      # amp 0.3
      # envAmpAtt "0.01 0.0001 0.01"
      # envAmpRel 0.3
      # envFrqAtt 0.0
      # envFrqRel 0.02
      # kharm1 10
      # kharm2 "20 3000 62"
      # kharm3 (130 * sine)
      # kharm4 4.0
      # kamp1 0.05
      # kamp2 0.05
      # kamp3 0.05
      # kamp4 0.05
      # kring1 1.0
      # kring2 "1.0 0.3 2"
      # kring3 1.0
      # kring4 1.0
      # frqScale "0.3 1 [0.3 0.21] 0.3"
      # decScale "1 10 1.3"
      # resoMix 0.5
      # hpf 75
      # gain 0.9
      ,
      -- slow 2 $
      -- density 2 $
      listen 1 $
      whenmod 18 12 (listen 0) $
      foldEvery [7,13]
      (spin "<1 2 2.5>" . every 2 (slow 2)) $
      s "rimSd(<1 2 1.5>,2.5) rimSd(<1.5? 2 1>,2.5)"
      # gain 0.67
      # amp 0.4
      # tu (("[0.4 <0.003 0.0004>]*2 {-0.0003 -0.002}%5")  )
      # envLev1 1 -- "0.001 0.2 0.36"
      # envLev2 0.5
      # envLev3 0.8
      # envLev4 0.4
      # atk "0.002 0 -0.002"
      # dcy ("0.4 0.002 0.1" * (slowcat [slow 2 $ range 0.5 1 sine, slow 4 $ range 0.75 0.9 saw, fast 5 $ range 0.4 1.2 tri]))
      # rls "0.1 0.2?"
      # hpfRq "1.0 0.2 1.2"
      # lpfRq "0.5 0.2 0.75"
      -- # bpf "5600 600 20"
      -- # bpq "-0.9 -0.1"
      # comp 0.35
      # compa 0.001
      # compr 0.2
      ,
      every 9 (listen 0) $
      listen 1 $
      s "bass3SusSd/2"
      -- # atk 0.01
      -- # note ("<1 2 3 6 1>" + "<12 1 3 6 7 1 3 9 12>")
      # sustain 2.2
      # hold 3
      # release 0.5
      # tu (34 * (range 0.2 2 sine))
      -- # atk "0.01 0.004"
      -- # loopNode "0 0.1 0.2"
      -- # sst "1.0 0.5 0.8"
      # rls "0.5 0.1 0.6"
      # gain 1.1
      -- # curve "-4.0"
      -- # envLevel1 0.0
      -- # envLevel2 40.0
      -- # envLevel3 32.0
      -- # envLevel4 50.0
      -- # envLevel5 0.0
      -- # envLevel6 60.0
      -- # envTime1 0.5
      -- # envTime2 0.3
      -- # envTime3 0.25
      -- # envTime4 1.0
      -- # envTime5 0.5
      # hpf 90
   ] #  cps 0.87
   |* gain 1.09


-- done
d1 $
  stack [
    listen 1 $
    someCyclesBy  (3/7)
    (spreadChoose ($)[listen 0, zoom ((1/7) , (5/7)), outside 4 (listen 0), inside 3 (off 2 (chunk 7 (listen 0))), splice 7 "1 2 3" ]) .
    (spreadChoose ($)[iter 2, bite 3 "1 5 3 1", slow 2, (listen 0 . slow 2)]) $
    s "fabHi1Sd(<3 4 6>,7,9)"
    # amp 0.6
    # wamp 0.5
    # envNatk 0.00001
    # envNrls 0.1
    # wbpfFreq 200.0
    # wbpfRq 1
    # sinFrq1 "12120.0 [8500 16000] 14000"
    # sinFrq2 "223.0 500"
    # sinPh1 3.14
    # sinPh2 "0.4 0.8 0.2"
    # sinLev1 0.4
    # sinLev2 0.8
    # envSatk 0.03
    # envSrls 0.1
    # mix 0.3
    # envL1 0.0
    # envL2 1
    # envL3 0.75
    # envL4 0.0
    # envT1 0
    # envT2 0.01
    # envT3 0
    # ffreq 8000.0
    # pan (slow 14 $ range 0.25 0.75 tri)
    ,
    listen 1 $
    someCyclesBy (5/14) (degradeBy (2/7)) $
    someCyclesBy (2/7)
    (spreadChoose ($)[rot 2, listen 0, ((1/7) <~), iter 2] ) $
    superimpose (((1/7) <~) . every 2 (rot 2)) $
    s "ringkickSusSd(<6 4 5>,<7 14>)"
    # amp 0.4
    # sustain 1
    # release 0.9
    # atk "0.01 0.018 0.015"
    # dcy 2.63
    # lpfFreq 18760.0
    # frq 26 -- ((scale "mixolydian" "26.0 29?") * 0.6)
    # envfL1 "11416.9 6500"
    # envfL2 0.0
    # envfL3 86.2
    # envfL4 20.0
    # envfL5 0.0
    # envfT1 0.0
    # envfT2 "0.01 0.04"
    # envfT3 "0.4 <3 2.3> 0.53"
    # envfT4 "0.3 2.37 0.02"
    # curve "-4.92 6.89"
    # envfAmt 0.92
    # lfnFrq 129.2
    # lfnAmt 0.9
    # ringAmp 0.3
    # sawFreq 20.7
    # sawPh 6.18
    # sawDecDiv 17.0
    # sawAmp 0.6
    # sinFreq 10010.0
    # sinFb 0.3
    # sinDecDiv 188.0
    # sinAmp 0.2
    # hpf 102
    ,
    listen 1 $
    someCyclesBy 0.34
    (degradeBy "<0.7 0.63 0.52>") $
    -- every 4
    juxBy 0.5 (chunk "2 6" (# echohz2 "223 646")) $
    slow "2 1.5" $
    ((3/7) ~>) $
    s "<oneclapThorBrSusSd {~ [oneclapThorBrSusSd ~ oneclapThorBrSusSd] oneclapThorBrSusSd}%3.5>"
      # amp 0.18
      # sustain 1.2
      # release 0.8
      # atk 0.1
      # rls 1.0
      # atkT 0.3
      # rlsT 0.035
      # tone 0.6
      # noiseAmp 0.6
      # rq 0.01
      # echohz1 "<33.33 42.333>"
      # echohz2 33.156
      # curve "-4.0"
      # dcy "<0.005 0.9 0.06>"
      # shelfFreq 17000.0
      # rs 0.5
      # db "-3.0"
      # mix (0.3 * (range 0.2 2 rand))
      # damp 0.5
      # hpf 120
      # gain 0.9
      ,
      listen 1 $
      someCyclesBy (1/7) (listen 0) $
      whenmod 21 15
      (slowspread ($) [degradeBy (2/7), inside 3.5 (iter 2), off 3.5 (spin 2), outside 1.75 (chunk 7 (degradeBy (3/7))), listen 0 . slow 2]) $
      s "haty48SusSd(<7 12 9 10>,<14 28>)"
      # amp 0.2
      # atk 0.0
      # rls "0.12 0.3 0.5"
      # curve "-4.0 -2 -1"
      # envaL1 1.81
      # envaL2 0.32
      # envaL3 "2.52 1 0.2"
      # envaL4 0.85
      # envaL5 0.0
      # envaT1 0.001
      # envaT2 0.02
      # envaT3 0.003
      # envaT4 0.2
      # envaCrv "{3.54 1 4 5}%3"
      # envpL1 ((scale "mixolydian" "26.0 29?") * "0.6 0.3 0.4 0.1")
      # envpL2 "{12936.0 9600 20}%2 {15000 8360}%3"
      # envpL3 "179.0 1600"
      # envpL4 0.1
      # envpT1 "0.01 0.1"
      # envpT2 "0.03 0.3 0.1"
      # envpT3 0.1
      # envpT4 0.53
      # envpCrv "-0.64 -2 -4"
      # modFreq "22.0 40 32"
      # modAmt 0.2
      # sinfAdd 1.7
      # sinPhase 0.28
      # sinpAdd 1.7
      # rf1Freq "938.8 500 200 12000"
      # rf1Rq 0.6
      # rf2Freq 1765.0
      # rf2Rq 0.2
      # hpfFreq 169.0
      # pan (fast 8 $ range 0.25 0.77 square)
  ]
  # cps 0.7
  |* gain 1.133
